// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pricing.proto
// Protobuf C++ Version: 5.27.2

#include "pricing.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace grpc_pricer {

inline constexpr ReqInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ReqInfo::ReqInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ReqInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReqInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReqInfoDefaultTypeInternal() {}
  union {
    ReqInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReqInfoDefaultTypeInternal _ReqInfo_default_instance_;

inline constexpr PricingOutput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : deltas_{},
        deltasstddev_{},
        price_{0},
        pricestddev_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PricingOutput::PricingOutput(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PricingOutputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PricingOutputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PricingOutputDefaultTypeInternal() {}
  union {
    PricingOutput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PricingOutputDefaultTypeInternal _PricingOutput_default_instance_;

inline constexpr PastLines::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : value_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PastLines::PastLines(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PastLinesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PastLinesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PastLinesDefaultTypeInternal() {}
  union {
    PastLines _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PastLinesDefaultTypeInternal _PastLines_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr Currency::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        interestrate_{0},
        volatility_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Currency::Currency(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CurrencyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CurrencyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CurrencyDefaultTypeInternal() {}
  union {
    Currency _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CurrencyDefaultTypeInternal _Currency_default_instance_;

inline constexpr CorrelationMatrix::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : values_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CorrelationMatrix::CorrelationMatrix(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CorrelationMatrixDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CorrelationMatrixDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CorrelationMatrixDefaultTypeInternal() {}
  union {
    CorrelationMatrix _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CorrelationMatrixDefaultTypeInternal _CorrelationMatrix_default_instance_;

inline constexpr Asset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : currencyid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        volatility_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Asset::Asset(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AssetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AssetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AssetDefaultTypeInternal() {}
  union {
    Asset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AssetDefaultTypeInternal _Asset_default_instance_;

inline constexpr PricingInput::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : past_{},
        currencies_{},
        assets_{},
        correlations_{},
        time_grid_{},
        domesticcurrencyid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_{0},
        monitoringdatereached_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PricingInput::PricingInput(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PricingInputDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PricingInputDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PricingInputDefaultTypeInternal() {}
  union {
    PricingInput _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PricingInputDefaultTypeInternal _PricingInput_default_instance_;
}  // namespace grpc_pricer
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_pricing_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_pricing_2eproto = nullptr;
const ::uint32_t
    TableStruct_pricing_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.past_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.monitoringdatereached_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.currencies_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.domesticcurrencyid_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.assets_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.correlations_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingInput, _impl_.time_grid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PastLines, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PastLines, _impl_.value_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Currency, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Currency, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Currency, _impl_.interestrate_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Currency, _impl_.volatility_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Asset, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Asset, _impl_.currencyid_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Asset, _impl_.volatility_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::CorrelationMatrix, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::CorrelationMatrix, _impl_.values_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingOutput, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingOutput, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingOutput, _impl_.deltas_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingOutput, _impl_.pricestddev_),
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::PricingOutput, _impl_.deltasstddev_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::Empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::ReqInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::grpc_pricer::ReqInfo, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::grpc_pricer::PricingInput)},
        {16, -1, -1, sizeof(::grpc_pricer::PastLines)},
        {25, -1, -1, sizeof(::grpc_pricer::Currency)},
        {36, -1, -1, sizeof(::grpc_pricer::Asset)},
        {46, -1, -1, sizeof(::grpc_pricer::CorrelationMatrix)},
        {55, -1, -1, sizeof(::grpc_pricer::PricingOutput)},
        {67, -1, -1, sizeof(::grpc_pricer::Empty)},
        {75, -1, -1, sizeof(::grpc_pricer::ReqInfo)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::grpc_pricer::_PricingInput_default_instance_._instance,
    &::grpc_pricer::_PastLines_default_instance_._instance,
    &::grpc_pricer::_Currency_default_instance_._instance,
    &::grpc_pricer::_Asset_default_instance_._instance,
    &::grpc_pricer::_CorrelationMatrix_default_instance_._instance,
    &::grpc_pricer::_PricingOutput_default_instance_._instance,
    &::grpc_pricer::_Empty_default_instance_._instance,
    &::grpc_pricer::_ReqInfo_default_instance_._instance,
};
const char descriptor_table_protodef_pricing_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\rpricing.proto\022\013grpc_pricer\"\225\002\n\014Pricing"
    "Input\022$\n\004past\030\001 \003(\0132\026.grpc_pricer.PastLi"
    "nes\022\035\n\025monitoringDateReached\030\002 \001(\010\022\014\n\004ti"
    "me\030\003 \001(\001\022)\n\ncurrencies\030\004 \003(\0132\025.grpc_pric"
    "er.Currency\022\032\n\022domesticCurrencyId\030\005 \001(\t\022"
    "\"\n\006assets\030\006 \003(\0132\022.grpc_pricer.Asset\0224\n\014c"
    "orrelations\030\007 \003(\0132\036.grpc_pricer.Correlat"
    "ionMatrix\022\021\n\ttime_grid\030\010 \003(\001\"\032\n\tPastLine"
    "s\022\r\n\005value\030\001 \003(\001\"@\n\010Currency\022\n\n\002id\030\001 \001(\t"
    "\022\024\n\014interestRate\030\002 \001(\001\022\022\n\nvolatility\030\003 \001"
    "(\001\"/\n\005Asset\022\022\n\ncurrencyId\030\001 \001(\t\022\022\n\nvolat"
    "ility\030\002 \001(\001\"#\n\021CorrelationMatrix\022\016\n\006valu"
    "es\030\001 \003(\001\"Y\n\rPricingOutput\022\r\n\005price\030\001 \001(\001"
    "\022\016\n\006deltas\030\002 \003(\001\022\023\n\013priceStdDev\030\003 \001(\001\022\024\n"
    "\014deltasStdDev\030\004 \003(\001\"\007\n\005Empty\"\032\n\007ReqInfo\022"
    "\017\n\007message\030\001 \001(\t2\215\001\n\nGrpcPricer\022G\n\016Price"
    "AndDeltas\022\031.grpc_pricer.PricingInput\032\032.g"
    "rpc_pricer.PricingOutput\0226\n\nHelloWorld\022\022"
    ".grpc_pricer.Empty\032\024.grpc_pricer.ReqInfo"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_pricing_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_pricing_2eproto = {
    false,
    false,
    768,
    descriptor_table_protodef_pricing_2eproto,
    "pricing.proto",
    &descriptor_table_pricing_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_pricing_2eproto::offsets,
    file_level_enum_descriptors_pricing_2eproto,
    file_level_service_descriptors_pricing_2eproto,
};
namespace grpc_pricer {
// ===================================================================

class PricingInput::_Internal {
 public:
};

PricingInput::PricingInput(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.PricingInput)
}
inline PROTOBUF_NDEBUG_INLINE PricingInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::PricingInput& from_msg)
      : past_{visibility, arena, from.past_},
        currencies_{visibility, arena, from.currencies_},
        assets_{visibility, arena, from.assets_},
        correlations_{visibility, arena, from.correlations_},
        time_grid_{visibility, arena, from.time_grid_},
        domesticcurrencyid_(arena, from.domesticcurrencyid_),
        _cached_size_{0} {}

PricingInput::PricingInput(
    ::google::protobuf::Arena* arena,
    const PricingInput& from)
    : ::google::protobuf::Message(arena) {
  PricingInput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, time_),
           offsetof(Impl_, monitoringdatereached_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::monitoringdatereached_));

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.PricingInput)
}
inline PROTOBUF_NDEBUG_INLINE PricingInput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : past_{visibility, arena},
        currencies_{visibility, arena},
        assets_{visibility, arena},
        correlations_{visibility, arena},
        time_grid_{visibility, arena},
        domesticcurrencyid_(arena),
        _cached_size_{0} {}

inline void PricingInput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, time_),
           0,
           offsetof(Impl_, monitoringdatereached_) -
               offsetof(Impl_, time_) +
               sizeof(Impl_::monitoringdatereached_));
}
PricingInput::~PricingInput() {
  // @@protoc_insertion_point(destructor:grpc_pricer.PricingInput)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PricingInput::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.domesticcurrencyid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PricingInput::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PricingInput, _impl_._cached_size_),
              false,
          },
          &PricingInput::MergeImpl,
          &PricingInput::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 4, 59, 2> PricingInput::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PricingInput_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::PricingInput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double time_grid = 8;
    {::_pbi::TcParser::FastF64P1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.time_grid_)}},
    // repeated .grpc_pricer.PastLines past = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.past_)}},
    // bool monitoringDateReached = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(PricingInput, _impl_.monitoringdatereached_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.monitoringdatereached_)}},
    // double time = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.time_)}},
    // repeated .grpc_pricer.Currency currencies = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.currencies_)}},
    // string domesticCurrencyId = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.domesticcurrencyid_)}},
    // repeated .grpc_pricer.Asset assets = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 2, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.assets_)}},
    // repeated .grpc_pricer.CorrelationMatrix correlations = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 3, PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.correlations_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .grpc_pricer.PastLines past = 1;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.past_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool monitoringDateReached = 2;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.monitoringdatereached_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // double time = 3;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated .grpc_pricer.Currency currencies = 4;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.currencies_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string domesticCurrencyId = 5;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.domesticcurrencyid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .grpc_pricer.Asset assets = 6;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.assets_), 0, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .grpc_pricer.CorrelationMatrix correlations = 7;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.correlations_), 0, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated double time_grid = 8;
    {PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.time_grid_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::grpc_pricer::PastLines>()},
    {::_pbi::TcParser::GetTable<::grpc_pricer::Currency>()},
    {::_pbi::TcParser::GetTable<::grpc_pricer::Asset>()},
    {::_pbi::TcParser::GetTable<::grpc_pricer::CorrelationMatrix>()},
  }}, {{
    "\30\0\0\0\0\22\0\0\0\0\0\0\0\0\0\0"
    "grpc_pricer.PricingInput"
    "domesticCurrencyId"
  }},
};

PROTOBUF_NOINLINE void PricingInput::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.PricingInput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.past_.Clear();
  _impl_.currencies_.Clear();
  _impl_.assets_.Clear();
  _impl_.correlations_.Clear();
  _impl_.time_grid_.Clear();
  _impl_.domesticcurrencyid_.ClearToEmpty();
  ::memset(&_impl_.time_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.monitoringdatereached_) -
      reinterpret_cast<char*>(&_impl_.time_)) + sizeof(_impl_.monitoringdatereached_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PricingInput::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.PricingInput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .grpc_pricer.PastLines past = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_past_size());
       i < n; i++) {
    const auto& repfield = this->_internal_past().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // bool monitoringDateReached = 2;
  if (this->_internal_monitoringdatereached() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_monitoringdatereached(), target);
  }

  // double time = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_time = this->_internal_time();
  ::uint64_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_time(), target);
  }

  // repeated .grpc_pricer.Currency currencies = 4;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_currencies_size());
       i < n; i++) {
    const auto& repfield = this->_internal_currencies().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            4, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string domesticCurrencyId = 5;
  if (!this->_internal_domesticcurrencyid().empty()) {
    const std::string& _s = this->_internal_domesticcurrencyid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc_pricer.PricingInput.domesticCurrencyId");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // repeated .grpc_pricer.Asset assets = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_assets_size());
       i < n; i++) {
    const auto& repfield = this->_internal_assets().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .grpc_pricer.CorrelationMatrix correlations = 7;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_correlations_size());
       i < n; i++) {
    const auto& repfield = this->_internal_correlations().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated double time_grid = 8;
  if (this->_internal_time_grid_size() > 0) {
    target = stream->WriteFixedPacked(8, _internal_time_grid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.PricingInput)
  return target;
}

::size_t PricingInput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.PricingInput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .grpc_pricer.PastLines past = 1;
  total_size += 1UL * this->_internal_past_size();
  for (const auto& msg : this->_internal_past()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .grpc_pricer.Currency currencies = 4;
  total_size += 1UL * this->_internal_currencies_size();
  for (const auto& msg : this->_internal_currencies()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .grpc_pricer.Asset assets = 6;
  total_size += 1UL * this->_internal_assets_size();
  for (const auto& msg : this->_internal_assets()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .grpc_pricer.CorrelationMatrix correlations = 7;
  total_size += 1UL * this->_internal_correlations_size();
  for (const auto& msg : this->_internal_correlations()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated double time_grid = 8;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_time_grid_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // string domesticCurrencyId = 5;
  if (!this->_internal_domesticcurrencyid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_domesticcurrencyid());
  }

  // double time = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_time = this->_internal_time();
  ::uint64_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    total_size += 9;
  }

  // bool monitoringDateReached = 2;
  if (this->_internal_monitoringdatereached() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PricingInput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PricingInput*>(&to_msg);
  auto& from = static_cast<const PricingInput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.PricingInput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_past()->MergeFrom(
      from._internal_past());
  _this->_internal_mutable_currencies()->MergeFrom(
      from._internal_currencies());
  _this->_internal_mutable_assets()->MergeFrom(
      from._internal_assets());
  _this->_internal_mutable_correlations()->MergeFrom(
      from._internal_correlations());
  _this->_internal_mutable_time_grid()->MergeFrom(from._internal_time_grid());
  if (!from._internal_domesticcurrencyid().empty()) {
    _this->_internal_set_domesticcurrencyid(from._internal_domesticcurrencyid());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_time = from._internal_time();
  ::uint64_t raw_time;
  memcpy(&raw_time, &tmp_time, sizeof(tmp_time));
  if (raw_time != 0) {
    _this->_impl_.time_ = from._impl_.time_;
  }
  if (from._internal_monitoringdatereached() != 0) {
    _this->_impl_.monitoringdatereached_ = from._impl_.monitoringdatereached_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PricingInput::CopyFrom(const PricingInput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.PricingInput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PricingInput::InternalSwap(PricingInput* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.past_.InternalSwap(&other->_impl_.past_);
  _impl_.currencies_.InternalSwap(&other->_impl_.currencies_);
  _impl_.assets_.InternalSwap(&other->_impl_.assets_);
  _impl_.correlations_.InternalSwap(&other->_impl_.correlations_);
  _impl_.time_grid_.InternalSwap(&other->_impl_.time_grid_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.domesticcurrencyid_, &other->_impl_.domesticcurrencyid_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.monitoringdatereached_)
      + sizeof(PricingInput::_impl_.monitoringdatereached_)
      - PROTOBUF_FIELD_OFFSET(PricingInput, _impl_.time_)>(
          reinterpret_cast<char*>(&_impl_.time_),
          reinterpret_cast<char*>(&other->_impl_.time_));
}

::google::protobuf::Metadata PricingInput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PastLines::_Internal {
 public:
};

PastLines::PastLines(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.PastLines)
}
inline PROTOBUF_NDEBUG_INLINE PastLines::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::PastLines& from_msg)
      : value_{visibility, arena, from.value_},
        _cached_size_{0} {}

PastLines::PastLines(
    ::google::protobuf::Arena* arena,
    const PastLines& from)
    : ::google::protobuf::Message(arena) {
  PastLines* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.PastLines)
}
inline PROTOBUF_NDEBUG_INLINE PastLines::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : value_{visibility, arena},
        _cached_size_{0} {}

inline void PastLines::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PastLines::~PastLines() {
  // @@protoc_insertion_point(destructor:grpc_pricer.PastLines)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PastLines::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PastLines::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PastLines, _impl_._cached_size_),
              false,
          },
          &PastLines::MergeImpl,
          &PastLines::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PastLines::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PastLines_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::PastLines>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double value = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PastLines, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double value = 1;
    {PROTOBUF_FIELD_OFFSET(PastLines, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PastLines::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.PastLines)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.value_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PastLines::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.PastLines)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double value = 1;
  if (this->_internal_value_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.PastLines)
  return target;
}

::size_t PastLines::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.PastLines)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double value = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_value_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PastLines::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PastLines*>(&to_msg);
  auto& from = static_cast<const PastLines&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.PastLines)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_value()->MergeFrom(from._internal_value());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PastLines::CopyFrom(const PastLines& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.PastLines)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PastLines::InternalSwap(PastLines* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.value_.InternalSwap(&other->_impl_.value_);
}

::google::protobuf::Metadata PastLines::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Currency::_Internal {
 public:
};

Currency::Currency(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.Currency)
}
inline PROTOBUF_NDEBUG_INLINE Currency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::Currency& from_msg)
      : id_(arena, from.id_),
        _cached_size_{0} {}

Currency::Currency(
    ::google::protobuf::Arena* arena,
    const Currency& from)
    : ::google::protobuf::Message(arena) {
  Currency* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interestrate_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, interestrate_),
           offsetof(Impl_, volatility_) -
               offsetof(Impl_, interestrate_) +
               sizeof(Impl_::volatility_));

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.Currency)
}
inline PROTOBUF_NDEBUG_INLINE Currency::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        _cached_size_{0} {}

inline void Currency::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, interestrate_),
           0,
           offsetof(Impl_, volatility_) -
               offsetof(Impl_, interestrate_) +
               sizeof(Impl_::volatility_));
}
Currency::~Currency() {
  // @@protoc_insertion_point(destructor:grpc_pricer.Currency)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Currency::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Currency::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Currency, _impl_._cached_size_),
              false,
          },
          &Currency::MergeImpl,
          &Currency::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 31, 2> Currency::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Currency_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::Currency>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Currency, _impl_.id_)}},
    // double interestRate = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Currency, _impl_.interestrate_)}},
    // double volatility = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(Currency, _impl_.volatility_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(Currency, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double interestRate = 2;
    {PROTOBUF_FIELD_OFFSET(Currency, _impl_.interestrate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double volatility = 3;
    {PROTOBUF_FIELD_OFFSET(Currency, _impl_.volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\24\2\0\0\0\0\0\0"
    "grpc_pricer.Currency"
    "id"
  }},
};

PROTOBUF_NOINLINE void Currency::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.Currency)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  ::memset(&_impl_.interestrate_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.volatility_) -
      reinterpret_cast<char*>(&_impl_.interestrate_)) + sizeof(_impl_.volatility_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Currency::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.Currency)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc_pricer.Currency.id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // double interestRate = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_interestrate = this->_internal_interestrate();
  ::uint64_t raw_interestrate;
  memcpy(&raw_interestrate, &tmp_interestrate, sizeof(tmp_interestrate));
  if (raw_interestrate != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_interestrate(), target);
  }

  // double volatility = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volatility = this->_internal_volatility();
  ::uint64_t raw_volatility;
  memcpy(&raw_volatility, &tmp_volatility, sizeof(tmp_volatility));
  if (raw_volatility != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_volatility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.Currency)
  return target;
}

::size_t Currency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.Currency)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string id = 1;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // double interestRate = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_interestrate = this->_internal_interestrate();
  ::uint64_t raw_interestrate;
  memcpy(&raw_interestrate, &tmp_interestrate, sizeof(tmp_interestrate));
  if (raw_interestrate != 0) {
    total_size += 9;
  }

  // double volatility = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volatility = this->_internal_volatility();
  ::uint64_t raw_volatility;
  memcpy(&raw_volatility, &tmp_volatility, sizeof(tmp_volatility));
  if (raw_volatility != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Currency::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Currency*>(&to_msg);
  auto& from = static_cast<const Currency&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.Currency)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_interestrate = from._internal_interestrate();
  ::uint64_t raw_interestrate;
  memcpy(&raw_interestrate, &tmp_interestrate, sizeof(tmp_interestrate));
  if (raw_interestrate != 0) {
    _this->_impl_.interestrate_ = from._impl_.interestrate_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volatility = from._internal_volatility();
  ::uint64_t raw_volatility;
  memcpy(&raw_volatility, &tmp_volatility, sizeof(tmp_volatility));
  if (raw_volatility != 0) {
    _this->_impl_.volatility_ = from._impl_.volatility_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Currency::CopyFrom(const Currency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.Currency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Currency::InternalSwap(Currency* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Currency, _impl_.volatility_)
      + sizeof(Currency::_impl_.volatility_)
      - PROTOBUF_FIELD_OFFSET(Currency, _impl_.interestrate_)>(
          reinterpret_cast<char*>(&_impl_.interestrate_),
          reinterpret_cast<char*>(&other->_impl_.interestrate_));
}

::google::protobuf::Metadata Currency::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Asset::_Internal {
 public:
};

Asset::Asset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.Asset)
}
inline PROTOBUF_NDEBUG_INLINE Asset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::Asset& from_msg)
      : currencyid_(arena, from.currencyid_),
        _cached_size_{0} {}

Asset::Asset(
    ::google::protobuf::Arena* arena,
    const Asset& from)
    : ::google::protobuf::Message(arena) {
  Asset* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.volatility_ = from._impl_.volatility_;

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.Asset)
}
inline PROTOBUF_NDEBUG_INLINE Asset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : currencyid_(arena),
        _cached_size_{0} {}

inline void Asset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.volatility_ = {};
}
Asset::~Asset() {
  // @@protoc_insertion_point(destructor:grpc_pricer.Asset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Asset::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.currencyid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Asset::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Asset, _impl_._cached_size_),
              false,
          },
          &Asset::MergeImpl,
          &Asset::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 36, 2> Asset::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Asset_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::Asset>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double volatility = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.volatility_)}},
    // string currencyId = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Asset, _impl_.currencyid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string currencyId = 1;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.currencyid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double volatility = 2;
    {PROTOBUF_FIELD_OFFSET(Asset, _impl_.volatility_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\21\12\0\0\0\0\0\0"
    "grpc_pricer.Asset"
    "currencyId"
  }},
};

PROTOBUF_NOINLINE void Asset::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.Asset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.currencyid_.ClearToEmpty();
  _impl_.volatility_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* Asset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.Asset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string currencyId = 1;
  if (!this->_internal_currencyid().empty()) {
    const std::string& _s = this->_internal_currencyid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc_pricer.Asset.currencyId");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // double volatility = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volatility = this->_internal_volatility();
  ::uint64_t raw_volatility;
  memcpy(&raw_volatility, &tmp_volatility, sizeof(tmp_volatility));
  if (raw_volatility != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        2, this->_internal_volatility(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.Asset)
  return target;
}

::size_t Asset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.Asset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string currencyId = 1;
  if (!this->_internal_currencyid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_currencyid());
  }

  // double volatility = 2;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volatility = this->_internal_volatility();
  ::uint64_t raw_volatility;
  memcpy(&raw_volatility, &tmp_volatility, sizeof(tmp_volatility));
  if (raw_volatility != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Asset::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Asset*>(&to_msg);
  auto& from = static_cast<const Asset&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.Asset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_currencyid().empty()) {
    _this->_internal_set_currencyid(from._internal_currencyid());
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_volatility = from._internal_volatility();
  ::uint64_t raw_volatility;
  memcpy(&raw_volatility, &tmp_volatility, sizeof(tmp_volatility));
  if (raw_volatility != 0) {
    _this->_impl_.volatility_ = from._impl_.volatility_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Asset::CopyFrom(const Asset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.Asset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Asset::InternalSwap(Asset* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currencyid_, &other->_impl_.currencyid_, arena);
        swap(_impl_.volatility_, other->_impl_.volatility_);
}

::google::protobuf::Metadata Asset::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CorrelationMatrix::_Internal {
 public:
};

CorrelationMatrix::CorrelationMatrix(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.CorrelationMatrix)
}
inline PROTOBUF_NDEBUG_INLINE CorrelationMatrix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::CorrelationMatrix& from_msg)
      : values_{visibility, arena, from.values_},
        _cached_size_{0} {}

CorrelationMatrix::CorrelationMatrix(
    ::google::protobuf::Arena* arena,
    const CorrelationMatrix& from)
    : ::google::protobuf::Message(arena) {
  CorrelationMatrix* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.CorrelationMatrix)
}
inline PROTOBUF_NDEBUG_INLINE CorrelationMatrix::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : values_{visibility, arena},
        _cached_size_{0} {}

inline void CorrelationMatrix::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CorrelationMatrix::~CorrelationMatrix() {
  // @@protoc_insertion_point(destructor:grpc_pricer.CorrelationMatrix)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CorrelationMatrix::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
CorrelationMatrix::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(CorrelationMatrix, _impl_._cached_size_),
              false,
          },
          &CorrelationMatrix::MergeImpl,
          &CorrelationMatrix::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CorrelationMatrix::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CorrelationMatrix_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::CorrelationMatrix>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double values = 1;
    {::_pbi::TcParser::FastF64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(CorrelationMatrix, _impl_.values_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated double values = 1;
    {PROTOBUF_FIELD_OFFSET(CorrelationMatrix, _impl_.values_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void CorrelationMatrix::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.CorrelationMatrix)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.values_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* CorrelationMatrix::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.CorrelationMatrix)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated double values = 1;
  if (this->_internal_values_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_values(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.CorrelationMatrix)
  return target;
}

::size_t CorrelationMatrix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.CorrelationMatrix)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double values = 1;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_values_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void CorrelationMatrix::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CorrelationMatrix*>(&to_msg);
  auto& from = static_cast<const CorrelationMatrix&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.CorrelationMatrix)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_values()->MergeFrom(from._internal_values());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CorrelationMatrix::CopyFrom(const CorrelationMatrix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.CorrelationMatrix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CorrelationMatrix::InternalSwap(CorrelationMatrix* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.values_.InternalSwap(&other->_impl_.values_);
}

::google::protobuf::Metadata CorrelationMatrix::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PricingOutput::_Internal {
 public:
};

PricingOutput::PricingOutput(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.PricingOutput)
}
inline PROTOBUF_NDEBUG_INLINE PricingOutput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::PricingOutput& from_msg)
      : deltas_{visibility, arena, from.deltas_},
        deltasstddev_{visibility, arena, from.deltasstddev_},
        _cached_size_{0} {}

PricingOutput::PricingOutput(
    ::google::protobuf::Arena* arena,
    const PricingOutput& from)
    : ::google::protobuf::Message(arena) {
  PricingOutput* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, pricestddev_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::pricestddev_));

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.PricingOutput)
}
inline PROTOBUF_NDEBUG_INLINE PricingOutput::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : deltas_{visibility, arena},
        deltasstddev_{visibility, arena},
        _cached_size_{0} {}

inline void PricingOutput::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           0,
           offsetof(Impl_, pricestddev_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::pricestddev_));
}
PricingOutput::~PricingOutput() {
  // @@protoc_insertion_point(destructor:grpc_pricer.PricingOutput)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PricingOutput::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
PricingOutput::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_._cached_size_),
              false,
          },
          &PricingOutput::MergeImpl,
          &PricingOutput::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> PricingOutput::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PricingOutput_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::PricingOutput>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated double deltasStdDev = 4;
    {::_pbi::TcParser::FastF64P1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.deltasstddev_)}},
    // double price = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.price_)}},
    // repeated double deltas = 2;
    {::_pbi::TcParser::FastF64P1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.deltas_)}},
    // double priceStdDev = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.pricestddev_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double price = 1;
    {PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.price_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated double deltas = 2;
    {PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.deltas_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
    // double priceStdDev = 3;
    {PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.pricestddev_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // repeated double deltasStdDev = 4;
    {PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.deltasstddev_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void PricingOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.PricingOutput)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.deltas_.Clear();
  _impl_.deltasstddev_.Clear();
  ::memset(&_impl_.price_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.pricestddev_) -
      reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.pricestddev_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* PricingOutput::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.PricingOutput)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double price = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = this->_internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        1, this->_internal_price(), target);
  }

  // repeated double deltas = 2;
  if (this->_internal_deltas_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_deltas(), target);
  }

  // double priceStdDev = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_pricestddev = this->_internal_pricestddev();
  ::uint64_t raw_pricestddev;
  memcpy(&raw_pricestddev, &tmp_pricestddev, sizeof(tmp_pricestddev));
  if (raw_pricestddev != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        3, this->_internal_pricestddev(), target);
  }

  // repeated double deltasStdDev = 4;
  if (this->_internal_deltasstddev_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_deltasstddev(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.PricingOutput)
  return target;
}

::size_t PricingOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.PricingOutput)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated double deltas = 2;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_deltas_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated double deltasStdDev = 4;
  {
    std::size_t data_size = std::size_t{8} *
        ::_pbi::FromIntSize(this->_internal_deltasstddev_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // double price = 1;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = this->_internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    total_size += 9;
  }

  // double priceStdDev = 3;
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_pricestddev = this->_internal_pricestddev();
  ::uint64_t raw_pricestddev;
  memcpy(&raw_pricestddev, &tmp_pricestddev, sizeof(tmp_pricestddev));
  if (raw_pricestddev != 0) {
    total_size += 9;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void PricingOutput::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PricingOutput*>(&to_msg);
  auto& from = static_cast<const PricingOutput&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.PricingOutput)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_deltas()->MergeFrom(from._internal_deltas());
  _this->_internal_mutable_deltasstddev()->MergeFrom(from._internal_deltasstddev());
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_price = from._internal_price();
  ::uint64_t raw_price;
  memcpy(&raw_price, &tmp_price, sizeof(tmp_price));
  if (raw_price != 0) {
    _this->_impl_.price_ = from._impl_.price_;
  }
  static_assert(sizeof(::uint64_t) == sizeof(double),
                "Code assumes ::uint64_t and double are the same size.");
  double tmp_pricestddev = from._internal_pricestddev();
  ::uint64_t raw_pricestddev;
  memcpy(&raw_pricestddev, &tmp_pricestddev, sizeof(tmp_pricestddev));
  if (raw_pricestddev != 0) {
    _this->_impl_.pricestddev_ = from._impl_.pricestddev_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PricingOutput::CopyFrom(const PricingOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.PricingOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PricingOutput::InternalSwap(PricingOutput* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.deltas_.InternalSwap(&other->_impl_.deltas_);
  _impl_.deltasstddev_.InternalSwap(&other->_impl_.deltasstddev_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.pricestddev_)
      + sizeof(PricingOutput::_impl_.pricestddev_)
      - PROTOBUF_FIELD_OFFSET(PricingOutput, _impl_.price_)>(
          reinterpret_cast<char*>(&_impl_.price_),
          reinterpret_cast<char*>(&other->_impl_.price_));
}

::google::protobuf::Metadata PricingOutput::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.Empty)
}

const ::google::protobuf::MessageLite::ClassData*
Empty::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(Empty, _impl_._cached_size_),
              false,
          },
          &Empty::MergeImpl,
          &Empty::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> Empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Empty_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::Empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReqInfo::_Internal {
 public:
};

ReqInfo::ReqInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:grpc_pricer.ReqInfo)
}
inline PROTOBUF_NDEBUG_INLINE ReqInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::grpc_pricer::ReqInfo& from_msg)
      : message_(arena, from.message_),
        _cached_size_{0} {}

ReqInfo::ReqInfo(
    ::google::protobuf::Arena* arena,
    const ReqInfo& from)
    : ::google::protobuf::Message(arena) {
  ReqInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:grpc_pricer.ReqInfo)
}
inline PROTOBUF_NDEBUG_INLINE ReqInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_(arena),
        _cached_size_{0} {}

inline void ReqInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ReqInfo::~ReqInfo() {
  // @@protoc_insertion_point(destructor:grpc_pricer.ReqInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ReqInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
ReqInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(ReqInfo, _impl_._cached_size_),
              false,
          },
          &ReqInfo::MergeImpl,
          &ReqInfo::kDescriptorMethods,
          &descriptor_table_pricing_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> ReqInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_ReqInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::grpc_pricer::ReqInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ReqInfo, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message = 1;
    {PROTOBUF_FIELD_OFFSET(ReqInfo, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\23\7\0\0\0\0\0\0"
    "grpc_pricer.ReqInfo"
    "message"
  }},
};

PROTOBUF_NOINLINE void ReqInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_pricer.ReqInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* ReqInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpc_pricer.ReqInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "grpc_pricer.ReqInfo.message");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_pricer.ReqInfo)
  return target;
}

::size_t ReqInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_pricer.ReqInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void ReqInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReqInfo*>(&to_msg);
  auto& from = static_cast<const ReqInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpc_pricer.ReqInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReqInfo::CopyFrom(const ReqInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_pricer.ReqInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReqInfo::InternalSwap(ReqInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata ReqInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_pricer
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_pricing_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
