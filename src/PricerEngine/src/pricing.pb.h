// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: pricing.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_pricing_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_pricing_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_pricing_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_pricing_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_pricing_2eproto;
namespace grpc_pricer {
class Asset;
struct AssetDefaultTypeInternal;
extern AssetDefaultTypeInternal _Asset_default_instance_;
class CorrelationMatrix;
struct CorrelationMatrixDefaultTypeInternal;
extern CorrelationMatrixDefaultTypeInternal _CorrelationMatrix_default_instance_;
class Currency;
struct CurrencyDefaultTypeInternal;
extern CurrencyDefaultTypeInternal _Currency_default_instance_;
class Empty;
struct EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class PastLines;
struct PastLinesDefaultTypeInternal;
extern PastLinesDefaultTypeInternal _PastLines_default_instance_;
class PricingInput;
struct PricingInputDefaultTypeInternal;
extern PricingInputDefaultTypeInternal _PricingInput_default_instance_;
class PricingOutput;
struct PricingOutputDefaultTypeInternal;
extern PricingOutputDefaultTypeInternal _PricingOutput_default_instance_;
class ReqInfo;
struct ReqInfoDefaultTypeInternal;
extern ReqInfoDefaultTypeInternal _ReqInfo_default_instance_;
}  // namespace grpc_pricer
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace grpc_pricer {

// ===================================================================


// -------------------------------------------------------------------

class ReqInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.ReqInfo) */ {
 public:
  inline ReqInfo() : ReqInfo(nullptr) {}
  ~ReqInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReqInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReqInfo(const ReqInfo& from) : ReqInfo(nullptr, from) {}
  inline ReqInfo(ReqInfo&& from) noexcept
      : ReqInfo(nullptr, std::move(from)) {}
  inline ReqInfo& operator=(const ReqInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReqInfo& operator=(ReqInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReqInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReqInfo* internal_default_instance() {
    return reinterpret_cast<const ReqInfo*>(
        &_ReqInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ReqInfo& a, ReqInfo& b) { a.Swap(&b); }
  inline void Swap(ReqInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReqInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReqInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ReqInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReqInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReqInfo& from) { ReqInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReqInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.ReqInfo"; }

 protected:
  explicit ReqInfo(::google::protobuf::Arena* arena);
  ReqInfo(::google::protobuf::Arena* arena, const ReqInfo& from);
  ReqInfo(::google::protobuf::Arena* arena, ReqInfo&& from) noexcept
      : ReqInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.ReqInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReqInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReqInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class PricingOutput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.PricingOutput) */ {
 public:
  inline PricingOutput() : PricingOutput(nullptr) {}
  ~PricingOutput() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PricingOutput(
      ::google::protobuf::internal::ConstantInitialized);

  inline PricingOutput(const PricingOutput& from) : PricingOutput(nullptr, from) {}
  inline PricingOutput(PricingOutput&& from) noexcept
      : PricingOutput(nullptr, std::move(from)) {}
  inline PricingOutput& operator=(const PricingOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline PricingOutput& operator=(PricingOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PricingOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const PricingOutput* internal_default_instance() {
    return reinterpret_cast<const PricingOutput*>(
        &_PricingOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PricingOutput& a, PricingOutput& b) { a.Swap(&b); }
  inline void Swap(PricingOutput* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PricingOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PricingOutput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PricingOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PricingOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PricingOutput& from) { PricingOutput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PricingOutput* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.PricingOutput"; }

 protected:
  explicit PricingOutput(::google::protobuf::Arena* arena);
  PricingOutput(::google::protobuf::Arena* arena, const PricingOutput& from);
  PricingOutput(::google::protobuf::Arena* arena, PricingOutput&& from) noexcept
      : PricingOutput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeltasFieldNumber = 2,
    kDeltasStdDevFieldNumber = 4,
    kPriceFieldNumber = 1,
    kPriceStdDevFieldNumber = 3,
  };
  // repeated double deltas = 2;
  int deltas_size() const;
  private:
  int _internal_deltas_size() const;

  public:
  void clear_deltas() ;
  double deltas(int index) const;
  void set_deltas(int index, double value);
  void add_deltas(double value);
  const ::google::protobuf::RepeatedField<double>& deltas() const;
  ::google::protobuf::RepeatedField<double>* mutable_deltas();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_deltas() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_deltas();

  public:
  // repeated double deltasStdDev = 4;
  int deltasstddev_size() const;
  private:
  int _internal_deltasstddev_size() const;

  public:
  void clear_deltasstddev() ;
  double deltasstddev(int index) const;
  void set_deltasstddev(int index, double value);
  void add_deltasstddev(double value);
  const ::google::protobuf::RepeatedField<double>& deltasstddev() const;
  ::google::protobuf::RepeatedField<double>* mutable_deltasstddev();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_deltasstddev() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_deltasstddev();

  public:
  // double price = 1;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // double priceStdDev = 3;
  void clear_pricestddev() ;
  double pricestddev() const;
  void set_pricestddev(double value);

  private:
  double _internal_pricestddev() const;
  void _internal_set_pricestddev(double value);

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.PricingOutput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PricingOutput_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PricingOutput& from_msg);
    ::google::protobuf::RepeatedField<double> deltas_;
    ::google::protobuf::RepeatedField<double> deltasstddev_;
    double price_;
    double pricestddev_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class PastLines final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.PastLines) */ {
 public:
  inline PastLines() : PastLines(nullptr) {}
  ~PastLines() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PastLines(
      ::google::protobuf::internal::ConstantInitialized);

  inline PastLines(const PastLines& from) : PastLines(nullptr, from) {}
  inline PastLines(PastLines&& from) noexcept
      : PastLines(nullptr, std::move(from)) {}
  inline PastLines& operator=(const PastLines& from) {
    CopyFrom(from);
    return *this;
  }
  inline PastLines& operator=(PastLines&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PastLines& default_instance() {
    return *internal_default_instance();
  }
  static inline const PastLines* internal_default_instance() {
    return reinterpret_cast<const PastLines*>(
        &_PastLines_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PastLines& a, PastLines& b) { a.Swap(&b); }
  inline void Swap(PastLines* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PastLines* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PastLines* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PastLines>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PastLines& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PastLines& from) { PastLines::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PastLines* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.PastLines"; }

 protected:
  explicit PastLines(::google::protobuf::Arena* arena);
  PastLines(::google::protobuf::Arena* arena, const PastLines& from);
  PastLines(::google::protobuf::Arena* arena, PastLines&& from) noexcept
      : PastLines(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // repeated double value = 1;
  int value_size() const;
  private:
  int _internal_value_size() const;

  public:
  void clear_value() ;
  double value(int index) const;
  void set_value(int index, double value);
  void add_value(double value);
  const ::google::protobuf::RepeatedField<double>& value() const;
  ::google::protobuf::RepeatedField<double>* mutable_value();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_value() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.PastLines)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PastLines_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PastLines& from_msg);
    ::google::protobuf::RepeatedField<double> value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class Empty final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:grpc_pricer.Empty) */ {
 public:
  inline Empty() : Empty(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Empty(
      ::google::protobuf::internal::ConstantInitialized);

  inline Empty(const Empty& from) : Empty(nullptr, from) {}
  inline Empty(Empty&& from) noexcept
      : Empty(nullptr, std::move(from)) {}
  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
        &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Empty& a, Empty& b) { a.Swap(&b); }
  inline void Swap(Empty* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Empty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.Empty"; }

 protected:
  explicit Empty(::google::protobuf::Arena* arena);
  Empty(::google::protobuf::Arena* arena, const Empty& from);
  Empty(::google::protobuf::Arena* arena, Empty&& from) noexcept
      : Empty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:grpc_pricer.Empty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Empty_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Empty& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class Currency final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.Currency) */ {
 public:
  inline Currency() : Currency(nullptr) {}
  ~Currency() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Currency(
      ::google::protobuf::internal::ConstantInitialized);

  inline Currency(const Currency& from) : Currency(nullptr, from) {}
  inline Currency(Currency&& from) noexcept
      : Currency(nullptr, std::move(from)) {}
  inline Currency& operator=(const Currency& from) {
    CopyFrom(from);
    return *this;
  }
  inline Currency& operator=(Currency&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Currency& default_instance() {
    return *internal_default_instance();
  }
  static inline const Currency* internal_default_instance() {
    return reinterpret_cast<const Currency*>(
        &_Currency_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Currency& a, Currency& b) { a.Swap(&b); }
  inline void Swap(Currency* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Currency* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Currency* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Currency>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Currency& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Currency& from) { Currency::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Currency* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.Currency"; }

 protected:
  explicit Currency(::google::protobuf::Arena* arena);
  Currency(::google::protobuf::Arena* arena, const Currency& from);
  Currency(::google::protobuf::Arena* arena, Currency&& from) noexcept
      : Currency(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kInterestRateFieldNumber = 2,
    kVolatilityFieldNumber = 3,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // double interestRate = 2;
  void clear_interestrate() ;
  double interestrate() const;
  void set_interestrate(double value);

  private:
  double _internal_interestrate() const;
  void _internal_set_interestrate(double value);

  public:
  // double volatility = 3;
  void clear_volatility() ;
  double volatility() const;
  void set_volatility(double value);

  private:
  double _internal_volatility() const;
  void _internal_set_volatility(double value);

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.Currency)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Currency_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Currency& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    double interestrate_;
    double volatility_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class CorrelationMatrix final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.CorrelationMatrix) */ {
 public:
  inline CorrelationMatrix() : CorrelationMatrix(nullptr) {}
  ~CorrelationMatrix() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CorrelationMatrix(
      ::google::protobuf::internal::ConstantInitialized);

  inline CorrelationMatrix(const CorrelationMatrix& from) : CorrelationMatrix(nullptr, from) {}
  inline CorrelationMatrix(CorrelationMatrix&& from) noexcept
      : CorrelationMatrix(nullptr, std::move(from)) {}
  inline CorrelationMatrix& operator=(const CorrelationMatrix& from) {
    CopyFrom(from);
    return *this;
  }
  inline CorrelationMatrix& operator=(CorrelationMatrix&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CorrelationMatrix& default_instance() {
    return *internal_default_instance();
  }
  static inline const CorrelationMatrix* internal_default_instance() {
    return reinterpret_cast<const CorrelationMatrix*>(
        &_CorrelationMatrix_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(CorrelationMatrix& a, CorrelationMatrix& b) { a.Swap(&b); }
  inline void Swap(CorrelationMatrix* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CorrelationMatrix* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CorrelationMatrix* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CorrelationMatrix>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CorrelationMatrix& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CorrelationMatrix& from) { CorrelationMatrix::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CorrelationMatrix* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.CorrelationMatrix"; }

 protected:
  explicit CorrelationMatrix(::google::protobuf::Arena* arena);
  CorrelationMatrix(::google::protobuf::Arena* arena, const CorrelationMatrix& from);
  CorrelationMatrix(::google::protobuf::Arena* arena, CorrelationMatrix&& from) noexcept
      : CorrelationMatrix(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValuesFieldNumber = 1,
  };
  // repeated double values = 1;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::google::protobuf::RepeatedField<double>& values() const;
  ::google::protobuf::RepeatedField<double>* mutable_values();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_values() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_values();

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.CorrelationMatrix)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CorrelationMatrix_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CorrelationMatrix& from_msg);
    ::google::protobuf::RepeatedField<double> values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class Asset final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.Asset) */ {
 public:
  inline Asset() : Asset(nullptr) {}
  ~Asset() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Asset(
      ::google::protobuf::internal::ConstantInitialized);

  inline Asset(const Asset& from) : Asset(nullptr, from) {}
  inline Asset(Asset&& from) noexcept
      : Asset(nullptr, std::move(from)) {}
  inline Asset& operator=(const Asset& from) {
    CopyFrom(from);
    return *this;
  }
  inline Asset& operator=(Asset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Asset& default_instance() {
    return *internal_default_instance();
  }
  static inline const Asset* internal_default_instance() {
    return reinterpret_cast<const Asset*>(
        &_Asset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Asset& a, Asset& b) { a.Swap(&b); }
  inline void Swap(Asset* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Asset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Asset* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Asset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Asset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Asset& from) { Asset::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Asset* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.Asset"; }

 protected:
  explicit Asset(::google::protobuf::Arena* arena);
  Asset(::google::protobuf::Arena* arena, const Asset& from);
  Asset(::google::protobuf::Arena* arena, Asset&& from) noexcept
      : Asset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCurrencyIdFieldNumber = 1,
    kVolatilityFieldNumber = 2,
  };
  // string currencyId = 1;
  void clear_currencyid() ;
  const std::string& currencyid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_currencyid(Arg_&& arg, Args_... args);
  std::string* mutable_currencyid();
  PROTOBUF_NODISCARD std::string* release_currencyid();
  void set_allocated_currencyid(std::string* value);

  private:
  const std::string& _internal_currencyid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_currencyid(
      const std::string& value);
  std::string* _internal_mutable_currencyid();

  public:
  // double volatility = 2;
  void clear_volatility() ;
  double volatility() const;
  void set_volatility(double value);

  private:
  double _internal_volatility() const;
  void _internal_set_volatility(double value);

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.Asset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Asset_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Asset& from_msg);
    ::google::protobuf::internal::ArenaStringPtr currencyid_;
    double volatility_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};
// -------------------------------------------------------------------

class PricingInput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:grpc_pricer.PricingInput) */ {
 public:
  inline PricingInput() : PricingInput(nullptr) {}
  ~PricingInput() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PricingInput(
      ::google::protobuf::internal::ConstantInitialized);

  inline PricingInput(const PricingInput& from) : PricingInput(nullptr, from) {}
  inline PricingInput(PricingInput&& from) noexcept
      : PricingInput(nullptr, std::move(from)) {}
  inline PricingInput& operator=(const PricingInput& from) {
    CopyFrom(from);
    return *this;
  }
  inline PricingInput& operator=(PricingInput&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PricingInput& default_instance() {
    return *internal_default_instance();
  }
  static inline const PricingInput* internal_default_instance() {
    return reinterpret_cast<const PricingInput*>(
        &_PricingInput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PricingInput& a, PricingInput& b) { a.Swap(&b); }
  inline void Swap(PricingInput* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PricingInput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PricingInput* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<PricingInput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PricingInput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PricingInput& from) { PricingInput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PricingInput* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "grpc_pricer.PricingInput"; }

 protected:
  explicit PricingInput(::google::protobuf::Arena* arena);
  PricingInput(::google::protobuf::Arena* arena, const PricingInput& from);
  PricingInput(::google::protobuf::Arena* arena, PricingInput&& from) noexcept
      : PricingInput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPastFieldNumber = 1,
    kCurrenciesFieldNumber = 4,
    kAssetsFieldNumber = 6,
    kCorrelationsFieldNumber = 7,
    kTimeGridFieldNumber = 8,
    kDomesticCurrencyIdFieldNumber = 5,
    kTimeFieldNumber = 3,
    kMonitoringDateReachedFieldNumber = 2,
  };
  // repeated .grpc_pricer.PastLines past = 1;
  int past_size() const;
  private:
  int _internal_past_size() const;

  public:
  void clear_past() ;
  ::grpc_pricer::PastLines* mutable_past(int index);
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>* mutable_past();

  private:
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>& _internal_past() const;
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>* _internal_mutable_past();
  public:
  const ::grpc_pricer::PastLines& past(int index) const;
  ::grpc_pricer::PastLines* add_past();
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>& past() const;
  // repeated .grpc_pricer.Currency currencies = 4;
  int currencies_size() const;
  private:
  int _internal_currencies_size() const;

  public:
  void clear_currencies() ;
  ::grpc_pricer::Currency* mutable_currencies(int index);
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>* mutable_currencies();

  private:
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>& _internal_currencies() const;
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>* _internal_mutable_currencies();
  public:
  const ::grpc_pricer::Currency& currencies(int index) const;
  ::grpc_pricer::Currency* add_currencies();
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>& currencies() const;
  // repeated .grpc_pricer.Asset assets = 6;
  int assets_size() const;
  private:
  int _internal_assets_size() const;

  public:
  void clear_assets() ;
  ::grpc_pricer::Asset* mutable_assets(int index);
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>* mutable_assets();

  private:
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>& _internal_assets() const;
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>* _internal_mutable_assets();
  public:
  const ::grpc_pricer::Asset& assets(int index) const;
  ::grpc_pricer::Asset* add_assets();
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>& assets() const;
  // repeated .grpc_pricer.CorrelationMatrix correlations = 7;
  int correlations_size() const;
  private:
  int _internal_correlations_size() const;

  public:
  void clear_correlations() ;
  ::grpc_pricer::CorrelationMatrix* mutable_correlations(int index);
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>* mutable_correlations();

  private:
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>& _internal_correlations() const;
  ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>* _internal_mutable_correlations();
  public:
  const ::grpc_pricer::CorrelationMatrix& correlations(int index) const;
  ::grpc_pricer::CorrelationMatrix* add_correlations();
  const ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>& correlations() const;
  // repeated double time_grid = 8;
  int time_grid_size() const;
  private:
  int _internal_time_grid_size() const;

  public:
  void clear_time_grid() ;
  double time_grid(int index) const;
  void set_time_grid(int index, double value);
  void add_time_grid(double value);
  const ::google::protobuf::RepeatedField<double>& time_grid() const;
  ::google::protobuf::RepeatedField<double>* mutable_time_grid();

  private:
  const ::google::protobuf::RepeatedField<double>& _internal_time_grid() const;
  ::google::protobuf::RepeatedField<double>* _internal_mutable_time_grid();

  public:
  // string domesticCurrencyId = 5;
  void clear_domesticcurrencyid() ;
  const std::string& domesticcurrencyid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_domesticcurrencyid(Arg_&& arg, Args_... args);
  std::string* mutable_domesticcurrencyid();
  PROTOBUF_NODISCARD std::string* release_domesticcurrencyid();
  void set_allocated_domesticcurrencyid(std::string* value);

  private:
  const std::string& _internal_domesticcurrencyid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_domesticcurrencyid(
      const std::string& value);
  std::string* _internal_mutable_domesticcurrencyid();

  public:
  // double time = 3;
  void clear_time() ;
  double time() const;
  void set_time(double value);

  private:
  double _internal_time() const;
  void _internal_set_time(double value);

  public:
  // bool monitoringDateReached = 2;
  void clear_monitoringdatereached() ;
  bool monitoringdatereached() const;
  void set_monitoringdatereached(bool value);

  private:
  bool _internal_monitoringdatereached() const;
  void _internal_set_monitoringdatereached(bool value);

  public:
  // @@protoc_insertion_point(class_scope:grpc_pricer.PricingInput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 4,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PricingInput_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PricingInput& from_msg);
    ::google::protobuf::RepeatedPtrField< ::grpc_pricer::PastLines > past_;
    ::google::protobuf::RepeatedPtrField< ::grpc_pricer::Currency > currencies_;
    ::google::protobuf::RepeatedPtrField< ::grpc_pricer::Asset > assets_;
    ::google::protobuf::RepeatedPtrField< ::grpc_pricer::CorrelationMatrix > correlations_;
    ::google::protobuf::RepeatedField<double> time_grid_;
    ::google::protobuf::internal::ArenaStringPtr domesticcurrencyid_;
    double time_;
    bool monitoringdatereached_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_pricing_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PricingInput

// repeated .grpc_pricer.PastLines past = 1;
inline int PricingInput::_internal_past_size() const {
  return _internal_past().size();
}
inline int PricingInput::past_size() const {
  return _internal_past_size();
}
inline void PricingInput::clear_past() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.past_.Clear();
}
inline ::grpc_pricer::PastLines* PricingInput::mutable_past(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:grpc_pricer.PricingInput.past)
  return _internal_mutable_past()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>* PricingInput::mutable_past()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingInput.past)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_past();
}
inline const ::grpc_pricer::PastLines& PricingInput::past(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.past)
  return _internal_past().Get(index);
}
inline ::grpc_pricer::PastLines* PricingInput::add_past() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::grpc_pricer::PastLines* _add = _internal_mutable_past()->Add();
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingInput.past)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>& PricingInput::past() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingInput.past)
  return _internal_past();
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>&
PricingInput::_internal_past() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.past_;
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::PastLines>*
PricingInput::_internal_mutable_past() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.past_;
}

// bool monitoringDateReached = 2;
inline void PricingInput::clear_monitoringdatereached() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoringdatereached_ = false;
}
inline bool PricingInput::monitoringdatereached() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.monitoringDateReached)
  return _internal_monitoringdatereached();
}
inline void PricingInput::set_monitoringdatereached(bool value) {
  _internal_set_monitoringdatereached(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingInput.monitoringDateReached)
}
inline bool PricingInput::_internal_monitoringdatereached() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.monitoringdatereached_;
}
inline void PricingInput::_internal_set_monitoringdatereached(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.monitoringdatereached_ = value;
}

// double time = 3;
inline void PricingInput::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = 0;
}
inline double PricingInput::time() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.time)
  return _internal_time();
}
inline void PricingInput::set_time(double value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingInput.time)
}
inline double PricingInput::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_;
}
inline void PricingInput::_internal_set_time(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_ = value;
}

// repeated .grpc_pricer.Currency currencies = 4;
inline int PricingInput::_internal_currencies_size() const {
  return _internal_currencies().size();
}
inline int PricingInput::currencies_size() const {
  return _internal_currencies_size();
}
inline void PricingInput::clear_currencies() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currencies_.Clear();
}
inline ::grpc_pricer::Currency* PricingInput::mutable_currencies(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:grpc_pricer.PricingInput.currencies)
  return _internal_mutable_currencies()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>* PricingInput::mutable_currencies()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingInput.currencies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_currencies();
}
inline const ::grpc_pricer::Currency& PricingInput::currencies(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.currencies)
  return _internal_currencies().Get(index);
}
inline ::grpc_pricer::Currency* PricingInput::add_currencies() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::grpc_pricer::Currency* _add = _internal_mutable_currencies()->Add();
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingInput.currencies)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>& PricingInput::currencies() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingInput.currencies)
  return _internal_currencies();
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>&
PricingInput::_internal_currencies() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currencies_;
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::Currency>*
PricingInput::_internal_mutable_currencies() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.currencies_;
}

// string domesticCurrencyId = 5;
inline void PricingInput::clear_domesticcurrencyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.domesticcurrencyid_.ClearToEmpty();
}
inline const std::string& PricingInput::domesticcurrencyid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.domesticCurrencyId)
  return _internal_domesticcurrencyid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PricingInput::set_domesticcurrencyid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.domesticcurrencyid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingInput.domesticCurrencyId)
}
inline std::string* PricingInput::mutable_domesticcurrencyid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_domesticcurrencyid();
  // @@protoc_insertion_point(field_mutable:grpc_pricer.PricingInput.domesticCurrencyId)
  return _s;
}
inline const std::string& PricingInput::_internal_domesticcurrencyid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.domesticcurrencyid_.Get();
}
inline void PricingInput::_internal_set_domesticcurrencyid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.domesticcurrencyid_.Set(value, GetArena());
}
inline std::string* PricingInput::_internal_mutable_domesticcurrencyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.domesticcurrencyid_.Mutable( GetArena());
}
inline std::string* PricingInput::release_domesticcurrencyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpc_pricer.PricingInput.domesticCurrencyId)
  return _impl_.domesticcurrencyid_.Release();
}
inline void PricingInput::set_allocated_domesticcurrencyid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.domesticcurrencyid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.domesticcurrencyid_.IsDefault()) {
          _impl_.domesticcurrencyid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc_pricer.PricingInput.domesticCurrencyId)
}

// repeated .grpc_pricer.Asset assets = 6;
inline int PricingInput::_internal_assets_size() const {
  return _internal_assets().size();
}
inline int PricingInput::assets_size() const {
  return _internal_assets_size();
}
inline void PricingInput::clear_assets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.assets_.Clear();
}
inline ::grpc_pricer::Asset* PricingInput::mutable_assets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:grpc_pricer.PricingInput.assets)
  return _internal_mutable_assets()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>* PricingInput::mutable_assets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingInput.assets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_assets();
}
inline const ::grpc_pricer::Asset& PricingInput::assets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.assets)
  return _internal_assets().Get(index);
}
inline ::grpc_pricer::Asset* PricingInput::add_assets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::grpc_pricer::Asset* _add = _internal_mutable_assets()->Add();
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingInput.assets)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>& PricingInput::assets() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingInput.assets)
  return _internal_assets();
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>&
PricingInput::_internal_assets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.assets_;
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::Asset>*
PricingInput::_internal_mutable_assets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.assets_;
}

// repeated .grpc_pricer.CorrelationMatrix correlations = 7;
inline int PricingInput::_internal_correlations_size() const {
  return _internal_correlations().size();
}
inline int PricingInput::correlations_size() const {
  return _internal_correlations_size();
}
inline void PricingInput::clear_correlations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.correlations_.Clear();
}
inline ::grpc_pricer::CorrelationMatrix* PricingInput::mutable_correlations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:grpc_pricer.PricingInput.correlations)
  return _internal_mutable_correlations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>* PricingInput::mutable_correlations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingInput.correlations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_correlations();
}
inline const ::grpc_pricer::CorrelationMatrix& PricingInput::correlations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.correlations)
  return _internal_correlations().Get(index);
}
inline ::grpc_pricer::CorrelationMatrix* PricingInput::add_correlations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::grpc_pricer::CorrelationMatrix* _add = _internal_mutable_correlations()->Add();
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingInput.correlations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>& PricingInput::correlations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingInput.correlations)
  return _internal_correlations();
}
inline const ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>&
PricingInput::_internal_correlations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.correlations_;
}
inline ::google::protobuf::RepeatedPtrField<::grpc_pricer::CorrelationMatrix>*
PricingInput::_internal_mutable_correlations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.correlations_;
}

// repeated double time_grid = 8;
inline int PricingInput::_internal_time_grid_size() const {
  return _internal_time_grid().size();
}
inline int PricingInput::time_grid_size() const {
  return _internal_time_grid_size();
}
inline void PricingInput::clear_time_grid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_grid_.Clear();
}
inline double PricingInput::time_grid(int index) const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingInput.time_grid)
  return _internal_time_grid().Get(index);
}
inline void PricingInput::set_time_grid(int index, double value) {
  _internal_mutable_time_grid()->Set(index, value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingInput.time_grid)
}
inline void PricingInput::add_time_grid(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_time_grid()->Add(value);
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingInput.time_grid)
}
inline const ::google::protobuf::RepeatedField<double>& PricingInput::time_grid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingInput.time_grid)
  return _internal_time_grid();
}
inline ::google::protobuf::RepeatedField<double>* PricingInput::mutable_time_grid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingInput.time_grid)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_time_grid();
}
inline const ::google::protobuf::RepeatedField<double>&
PricingInput::_internal_time_grid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_grid_;
}
inline ::google::protobuf::RepeatedField<double>* PricingInput::_internal_mutable_time_grid() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.time_grid_;
}

// -------------------------------------------------------------------

// PastLines

// repeated double value = 1;
inline int PastLines::_internal_value_size() const {
  return _internal_value().size();
}
inline int PastLines::value_size() const {
  return _internal_value_size();
}
inline void PastLines::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Clear();
}
inline double PastLines::value(int index) const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PastLines.value)
  return _internal_value().Get(index);
}
inline void PastLines::set_value(int index, double value) {
  _internal_mutable_value()->Set(index, value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PastLines.value)
}
inline void PastLines::add_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_value()->Add(value);
  // @@protoc_insertion_point(field_add:grpc_pricer.PastLines.value)
}
inline const ::google::protobuf::RepeatedField<double>& PastLines::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PastLines.value)
  return _internal_value();
}
inline ::google::protobuf::RepeatedField<double>* PastLines::mutable_value()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PastLines.value)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_value();
}
inline const ::google::protobuf::RepeatedField<double>&
PastLines::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline ::google::protobuf::RepeatedField<double>* PastLines::_internal_mutable_value() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.value_;
}

// -------------------------------------------------------------------

// Currency

// string id = 1;
inline void Currency::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& Currency::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.Currency.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Currency::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc_pricer.Currency.id)
}
inline std::string* Currency::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:grpc_pricer.Currency.id)
  return _s;
}
inline const std::string& Currency::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Currency::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* Currency::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* Currency::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpc_pricer.Currency.id)
  return _impl_.id_.Release();
}
inline void Currency::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc_pricer.Currency.id)
}

// double interestRate = 2;
inline void Currency::clear_interestrate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interestrate_ = 0;
}
inline double Currency::interestrate() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.Currency.interestRate)
  return _internal_interestrate();
}
inline void Currency::set_interestrate(double value) {
  _internal_set_interestrate(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.Currency.interestRate)
}
inline double Currency::_internal_interestrate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interestrate_;
}
inline void Currency::_internal_set_interestrate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interestrate_ = value;
}

// double volatility = 3;
inline void Currency::clear_volatility() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volatility_ = 0;
}
inline double Currency::volatility() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.Currency.volatility)
  return _internal_volatility();
}
inline void Currency::set_volatility(double value) {
  _internal_set_volatility(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.Currency.volatility)
}
inline double Currency::_internal_volatility() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volatility_;
}
inline void Currency::_internal_set_volatility(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volatility_ = value;
}

// -------------------------------------------------------------------

// Asset

// string currencyId = 1;
inline void Asset::clear_currencyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currencyid_.ClearToEmpty();
}
inline const std::string& Asset::currencyid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.Asset.currencyId)
  return _internal_currencyid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Asset::set_currencyid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currencyid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc_pricer.Asset.currencyId)
}
inline std::string* Asset::mutable_currencyid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_currencyid();
  // @@protoc_insertion_point(field_mutable:grpc_pricer.Asset.currencyId)
  return _s;
}
inline const std::string& Asset::_internal_currencyid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currencyid_.Get();
}
inline void Asset::_internal_set_currencyid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currencyid_.Set(value, GetArena());
}
inline std::string* Asset::_internal_mutable_currencyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.currencyid_.Mutable( GetArena());
}
inline std::string* Asset::release_currencyid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpc_pricer.Asset.currencyId)
  return _impl_.currencyid_.Release();
}
inline void Asset::set_allocated_currencyid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currencyid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.currencyid_.IsDefault()) {
          _impl_.currencyid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc_pricer.Asset.currencyId)
}

// double volatility = 2;
inline void Asset::clear_volatility() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volatility_ = 0;
}
inline double Asset::volatility() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.Asset.volatility)
  return _internal_volatility();
}
inline void Asset::set_volatility(double value) {
  _internal_set_volatility(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.Asset.volatility)
}
inline double Asset::_internal_volatility() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volatility_;
}
inline void Asset::_internal_set_volatility(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volatility_ = value;
}

// -------------------------------------------------------------------

// CorrelationMatrix

// repeated double values = 1;
inline int CorrelationMatrix::_internal_values_size() const {
  return _internal_values().size();
}
inline int CorrelationMatrix::values_size() const {
  return _internal_values_size();
}
inline void CorrelationMatrix::clear_values() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.values_.Clear();
}
inline double CorrelationMatrix::values(int index) const {
  // @@protoc_insertion_point(field_get:grpc_pricer.CorrelationMatrix.values)
  return _internal_values().Get(index);
}
inline void CorrelationMatrix::set_values(int index, double value) {
  _internal_mutable_values()->Set(index, value);
  // @@protoc_insertion_point(field_set:grpc_pricer.CorrelationMatrix.values)
}
inline void CorrelationMatrix::add_values(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_values()->Add(value);
  // @@protoc_insertion_point(field_add:grpc_pricer.CorrelationMatrix.values)
}
inline const ::google::protobuf::RepeatedField<double>& CorrelationMatrix::values() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.CorrelationMatrix.values)
  return _internal_values();
}
inline ::google::protobuf::RepeatedField<double>* CorrelationMatrix::mutable_values()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.CorrelationMatrix.values)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_values();
}
inline const ::google::protobuf::RepeatedField<double>&
CorrelationMatrix::_internal_values() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedField<double>* CorrelationMatrix::_internal_mutable_values() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// PricingOutput

// double price = 1;
inline void PricingOutput::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
}
inline double PricingOutput::price() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingOutput.price)
  return _internal_price();
}
inline void PricingOutput::set_price(double value) {
  _internal_set_price(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingOutput.price)
}
inline double PricingOutput::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void PricingOutput::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// repeated double deltas = 2;
inline int PricingOutput::_internal_deltas_size() const {
  return _internal_deltas().size();
}
inline int PricingOutput::deltas_size() const {
  return _internal_deltas_size();
}
inline void PricingOutput::clear_deltas() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deltas_.Clear();
}
inline double PricingOutput::deltas(int index) const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingOutput.deltas)
  return _internal_deltas().Get(index);
}
inline void PricingOutput::set_deltas(int index, double value) {
  _internal_mutable_deltas()->Set(index, value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingOutput.deltas)
}
inline void PricingOutput::add_deltas(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deltas()->Add(value);
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingOutput.deltas)
}
inline const ::google::protobuf::RepeatedField<double>& PricingOutput::deltas() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingOutput.deltas)
  return _internal_deltas();
}
inline ::google::protobuf::RepeatedField<double>* PricingOutput::mutable_deltas()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingOutput.deltas)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deltas();
}
inline const ::google::protobuf::RepeatedField<double>&
PricingOutput::_internal_deltas() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deltas_;
}
inline ::google::protobuf::RepeatedField<double>* PricingOutput::_internal_mutable_deltas() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deltas_;
}

// double priceStdDev = 3;
inline void PricingOutput::clear_pricestddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pricestddev_ = 0;
}
inline double PricingOutput::pricestddev() const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingOutput.priceStdDev)
  return _internal_pricestddev();
}
inline void PricingOutput::set_pricestddev(double value) {
  _internal_set_pricestddev(value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingOutput.priceStdDev)
}
inline double PricingOutput::_internal_pricestddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pricestddev_;
}
inline void PricingOutput::_internal_set_pricestddev(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pricestddev_ = value;
}

// repeated double deltasStdDev = 4;
inline int PricingOutput::_internal_deltasstddev_size() const {
  return _internal_deltasstddev().size();
}
inline int PricingOutput::deltasstddev_size() const {
  return _internal_deltasstddev_size();
}
inline void PricingOutput::clear_deltasstddev() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deltasstddev_.Clear();
}
inline double PricingOutput::deltasstddev(int index) const {
  // @@protoc_insertion_point(field_get:grpc_pricer.PricingOutput.deltasStdDev)
  return _internal_deltasstddev().Get(index);
}
inline void PricingOutput::set_deltasstddev(int index, double value) {
  _internal_mutable_deltasstddev()->Set(index, value);
  // @@protoc_insertion_point(field_set:grpc_pricer.PricingOutput.deltasStdDev)
}
inline void PricingOutput::add_deltasstddev(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deltasstddev()->Add(value);
  // @@protoc_insertion_point(field_add:grpc_pricer.PricingOutput.deltasStdDev)
}
inline const ::google::protobuf::RepeatedField<double>& PricingOutput::deltasstddev() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:grpc_pricer.PricingOutput.deltasStdDev)
  return _internal_deltasstddev();
}
inline ::google::protobuf::RepeatedField<double>* PricingOutput::mutable_deltasstddev()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:grpc_pricer.PricingOutput.deltasStdDev)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deltasstddev();
}
inline const ::google::protobuf::RepeatedField<double>&
PricingOutput::_internal_deltasstddev() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deltasstddev_;
}
inline ::google::protobuf::RepeatedField<double>* PricingOutput::_internal_mutable_deltasstddev() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deltasstddev_;
}

// -------------------------------------------------------------------

// Empty

// -------------------------------------------------------------------

// ReqInfo

// string message = 1;
inline void ReqInfo::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& ReqInfo::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:grpc_pricer.ReqInfo.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReqInfo::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:grpc_pricer.ReqInfo.message)
}
inline std::string* ReqInfo::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:grpc_pricer.ReqInfo.message)
  return _s;
}
inline const std::string& ReqInfo::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void ReqInfo::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* ReqInfo::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* ReqInfo::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:grpc_pricer.ReqInfo.message)
  return _impl_.message_.Release();
}
inline void ReqInfo::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpc_pricer.ReqInfo.message)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpc_pricer


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_pricing_2eproto_2epb_2eh
